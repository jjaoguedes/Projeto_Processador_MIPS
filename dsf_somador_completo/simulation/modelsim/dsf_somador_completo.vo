// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "01/14/2024 10:54:19"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module dsf_somador_completo (
	a,
	b,
	CarryIn,
	soma,
	CarryOut);
input 	a;
input 	b;
input 	CarryIn;
output 	soma;
output 	CarryOut;

// Design Ports Information
// soma	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CarryOut	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CarryIn	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \soma~output_o ;
wire \CarryOut~output_o ;
wire \a~input_o ;
wire \b~input_o ;
wire \CarryIn~input_o ;
wire \soma~0_combout ;
wire \CarryOut~0_combout ;


// Location: IOOBUF_X8_Y0_N9
cycloneiv_io_obuf \soma~output (
	.i(\soma~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\soma~output_o ),
	.obar());
// synopsys translate_off
defparam \soma~output .bus_hold = "false";
defparam \soma~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X10_Y0_N9
cycloneiv_io_obuf \CarryOut~output (
	.i(\CarryOut~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\CarryOut~output_o ),
	.obar());
// synopsys translate_off
defparam \CarryOut~output .bus_hold = "false";
defparam \CarryOut~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N1
cycloneiv_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N8
cycloneiv_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N8
cycloneiv_io_ibuf \CarryIn~input (
	.i(CarryIn),
	.ibar(gnd),
	.o(\CarryIn~input_o ));
// synopsys translate_off
defparam \CarryIn~input .bus_hold = "false";
defparam \CarryIn~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X12_Y1_N0
cycloneiv_lcell_comb \soma~0 (
// Equation(s):
// \soma~0_combout  = \a~input_o  $ (\b~input_o  $ (\CarryIn~input_o ))

	.dataa(\a~input_o ),
	.datab(\b~input_o ),
	.datac(gnd),
	.datad(\CarryIn~input_o ),
	.cin(gnd),
	.combout(\soma~0_combout ),
	.cout());
// synopsys translate_off
defparam \soma~0 .lut_mask = 16'h9966;
defparam \soma~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X12_Y1_N2
cycloneiv_lcell_comb \CarryOut~0 (
// Equation(s):
// \CarryOut~0_combout  = (\a~input_o  & ((\b~input_o ) # (\CarryIn~input_o ))) # (!\a~input_o  & (\b~input_o  & \CarryIn~input_o ))

	.dataa(\a~input_o ),
	.datab(\b~input_o ),
	.datac(gnd),
	.datad(\CarryIn~input_o ),
	.cin(gnd),
	.combout(\CarryOut~0_combout ),
	.cout());
// synopsys translate_off
defparam \CarryOut~0 .lut_mask = 16'hEE88;
defparam \CarryOut~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign soma = \soma~output_o ;

assign CarryOut = \CarryOut~output_o ;

endmodule
